name: publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: version (1.2.3)
        required: true
        type: string

jobs:
  prepublish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - run: |
          git config --global user.email "<>"
          git config --global user.name "GitHub Actions"
      - run: yarn install --immutable --immutable-cache
      - run: yarn version --new-version "${{ inputs.version }}"
      - run: git push --tags


  npm-publish:
    env:
      NPM_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
    runs-on: ubuntu-latest

    needs: prepublish

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
      - run: yarn install --immutable --immutable-cache
      - run: yarn publish


  docker-publish:
    runs-on: ubuntu-latest

    needs: prepublish

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: uglydonkey/gmail-backup

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  create-gh-release:
    runs-on: ubuntu-latest

    needs:
      - npm-publish
      - docker-publish

    steps:
      - run: gh release create "v${{ inputs.version }}" --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
